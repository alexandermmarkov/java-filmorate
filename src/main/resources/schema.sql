DROP TABLE IF EXISTS film_genres CASCADE;
DROP TABLE IF EXISTS film_likes CASCADE;
DROP TABLE IF EXISTS friends CASCADE;
DROP TABLE IF EXISTS films CASCADE;
DROP TABLE IF EXISTS genres CASCADE;
DROP TABLE IF EXISTS mpa CASCADE;
DROP TABLE IF EXISTS users CASCADE;

CREATE TABLE IF NOT EXISTS genres (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar(40) NOT NULL
);

CREATE TABLE IF NOT EXISTS mpa (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar(40) NOT NULL
);

CREATE TABLE IF NOT EXISTS films (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar(40) NOT NULL,
    description varchar(200),
    release_date date NOT NULL,
    duration integer CHECK (duration > 0),
    mpa_id integer REFERENCES mpa (id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS users (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    login varchar(40) NOT NULL,
    email varchar NOT NULL,
    name varchar,
    birthday date
);

CREATE TABLE IF NOT EXISTS film_genres (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    film_id integer REFERENCES films (id) ON DELETE CASCADE NOT NULL,
    genre_id integer REFERENCES genres (id) ON DELETE CASCADE NOT NULL
);

CREATE TABLE IF NOT EXISTS film_likes (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id integer REFERENCES users (id) ON DELETE CASCADE NOT NULL,
    film_id integer REFERENCES films (id) ON DELETE CASCADE NOT NULL
);

CREATE TABLE IF NOT EXISTS friends (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id integer REFERENCES users (id) ON DELETE CASCADE NOT NULL,
    friend_id integer REFERENCES users (id) ON DELETE CASCADE NOT NULL
);